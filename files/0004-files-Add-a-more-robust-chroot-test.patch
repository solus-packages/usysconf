From e5ea55c05c89a5815b9c8f5add8a0552522fcfc1 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Wed, 29 Nov 2017 22:00:04 +0000
Subject: [PATCH 4/6] files: Add a more robust chroot test

With this test we'll look at `/proc/1` to determine if its root is
somehow different to our own. It turns out the ino check from before
just wasn't sufficient when using a loopback mounted filesystem.

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 src/files.c | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/src/files.c b/src/files.c
index d0b596a..4369613 100644
--- a/src/files.c
+++ b/src/files.c
@@ -19,13 +19,25 @@
 
 bool usc_is_chrooted()
 {
-        struct stat st = { 0 };
-        /* Don't do dangerous system ops within a chroot like cbm updates */
-        if (stat("/", &st) != 0) {
+        struct stat root_stat = { 0 };
+        struct stat proc_stat = { 0 };
+
+        if (stat("/", &root_stat) != 0) {
                 fprintf(stderr, "Unable to probe '/', assuming chroot\n");
                 return true;
         }
-        return st.st_ino != 2;
+        if (stat("/proc/1/root/.", &proc_stat) != 0) {
+                fprintf(stderr, "Unable to probe '/proc/1/root/.', assuming chroot\n");
+                return true;
+        }
+
+        if (root_stat.st_dev != proc_stat.st_dev) {
+                return true;
+        }
+        if (root_stat.st_ino != proc_stat.st_ino) {
+                return true;
+        }
+        return false;
 }
 
 bool usc_file_mtime(const char *path, time_t *time)
-- 
2.15.1

